#!/bin/bash

VER_FREEPBX="$(cat /var/www/html/admin/modules/framework/module.xml | grep "<version>" | tail -1 | cut -f 2 -d ">" | sed 's|</version||')"
VER_ASTERISK="$(asterisk -V | cut -b 10-11)"

if [[ "$1" = "" || "$1" = "-c" || "$1" = "-i" || "$1" = "-w" ]]; then
  OPTION="$1"
else
  echo ""
  echo "Usage: $0 [-c | -i | -w]"
  echo "-c = Compile only"
  echo "-i = Install only"
  echo "-w = Wait to install"
  echo ""
  exit 1
fi
if [ "${OPTION}" != "-i" ]; then
  echo ""
  cd /usr/src
  wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-${VER_ASTERISK}-current.tar.gz
  LATEST_VERSION="$(tar --wildcards --to-stdout -xf asterisk-${VER_ASTERISK}-current.tar.gz "asterisk-*/.version")"
  CURRENT_VERSION="$(asterisk -V | cut -f 2 -d " ")"
  echo "Current Asterisk Version: ${CURRENT_VERSION}"
  echo " Latest Asterisk Version: ${LATEST_VERSION}"
  echo ""
  echo -n "Upgrade now (y/n)? "
  while read -r -n 1 -s answer; do
    if [[ ${answer} = [yYnN] ]]; then
      echo "${answer}"
      if [[ ${answer} = [yY] ]]; then
        break
      else
        rm asterisk-${VER_ASTERISK}-current.tar.gz
        echo ""
        echo "Aborted"
        echo ""
        exit 1
      fi
    fi
  done
  echo ""

  apt-get -y update
  apt-get -y install xmlstarlet
  rm -r /usr/src/asterisk*/
  tar xfz asterisk-${VER_ASTERISK}-current.tar.gz
  rm asterisk-${VER_ASTERISK}-current.tar.gz
  cd /usr/src/asterisk*
  sed -i 's|\(^#define DEVICE_FRAME_SIZE \).*|\164|' addons/chan_mobile.c
  contrib/scripts/get_mp3_source.sh
  ./configure --with-pjproject-bundled --with-jansson-bundled --with-bluetooth
  make menuselect.makeopts
  menuselect/menuselect --enable CORE-SOUNDS-EN-WAV --enable CORE-SOUNDS-EN-ULAW menuselect.makeopts
  menuselect/menuselect --enable CORE-SOUNDS-EN-GSM --enable CORE-SOUNDS-EN-G722 menuselect.makeopts
  menuselect/menuselect --enable EXTRA-SOUNDS-EN-WAV --enable EXTRA-SOUNDS-EN-ULAW menuselect.makeopts
  menuselect/menuselect --enable EXTRA-SOUNDS-EN-GSM --enable EXTRA-SOUNDS-EN-G722 menuselect.makeopts
  menuselect/menuselect --enable format_mp3 --enable chan_mobile --enable app_macro menuselect.makeopts
  make
  RESULT=$?
  sync
  if [ ${RESULT} -ne 0 ]; then
    exit ${RESULT}
  fi
fi

if [ "${OPTION}" != "-c" ]; then
  if [ "${OPTION}" = "-w" ]; then
    echo ""
    echo -n "Ok to stop/restart Asterisk to install new version (y/n)? "
    while read -r -n 1 -s answer; do
      if [[ ${answer} = [yYnN] ]]; then
        echo "${answer}"
        if [[ ${answer} = [yY] ]]; then
          break
        else
          echo ""
          echo "Aborted"
          echo ""
          exit 1
        fi
      fi
    done
  fi
  echo ""
  fwconsole stop
  rm -r /usr/lib/asterisk/*
  cd /usr/src/asterisk*
  make install
  ldconfig
  rm /usr/src/asterisk*/sounds/*.tar.gz
  rm /var/lib/asterisk/sounds/tmp/* &> /dev/null
  fwconsole start
  fwconsole reload
  sync

  echo ""
  echo "Upgrade Completed"
  COUNTER=0
  while [ ${COUNTER} -lt 60 ]
  do
    sleep 1
    VERSION="$(asterisk -rx "core show version" 2> /dev/null)"
    if [ $? -eq 0 ]; then
      grep "such" <<< "${VERSION}" > /dev/nul
      if [ $? -ne 0 ]; then
        break
      fi
    fi
    (( COUNTER += 1 ))
  done
  CURRENT_VERSION="$(cat <<< "${VERSION}" | cut -f 2 -d " ")"
  echo ""
  echo "Current Asterisk Version: ${CURRENT_VERSION}"
fi
echo ""
